{"ast":null,"code":"var _jsxFileName = \"/opt/Typical Page/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  } else if (action.type === \"USER_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  } else if (action.type === \"USER_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 1000);\n    return () => {\n      clearTimeout(identifier);\n      console.log(\"Clean up\");\n    };\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"USER_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchEmail({\n      type: \"USER_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"smZdEdClN8nbqEte8/RFsXU+NCc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/opt/Typical Page/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state,action)=>{\n  if(action.type === \"USER_INPUT\"){\n\n    return {value : action.val, isValid : action.val.includes('@')};\n  }\n  else if(action.type === \"USER_BLUR\"){\n    return {value : state.value, isValid : state.value.includes('@')};\n  }\n\n  return {value : \"\", isValid : false};\n}\n\nconst passwordReducer = (state,action)=>{\n\n  if(action.type === \"USER_INPUT\"){\n    return {value:action.val, isValid:action.val.trim().length > 6};\n  }\n  else if(action.type === \"USER_BLUR\"){\n    return {value:state.value, isValid:state.value.trim().length > 6};\n  }\n  return {value:\"\",isValid:false};\n}\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState,dispatchEmail] = useReducer(emailReducer, {value : \"\", isValid : false});\n  const [passwordState,dispatchPassword] = useReducer(passwordReducer,{value : \"\", isValid : false});\n\n  useEffect(()=>{\n\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity\");\n\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );      \n    }, 1000);\n\n    return ()=>{\n      clearTimeout(identifier);\n      console.log(\"Clean up\");\n    }\n\n  },[emailState,passwordState]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type:\"USER_INPUT\",val:event.target.value});\n    \n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type:\"USER_INPUT\", val : event.target.value});\n    \n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type : \"USER_BLUR\"});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchEmail({type : \"USER_BLUR\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}